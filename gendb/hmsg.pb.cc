// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmsg.proto

#include "hmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_hmsg_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_hmsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HmsgExit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_hmsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HmsgFileOpen;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_hmsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HmsgProcEnd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_hmsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HmsgProcStart;
}  // namespace protobuf_hmsg_2eproto
class HmsgProcStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HmsgProcStart>
      _instance;
} _HmsgProcStart_default_instance_;
class HmsgProcEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HmsgProcEnd>
      _instance;
} _HmsgProcEnd_default_instance_;
class HmsgFileOpenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HmsgFileOpen>
      _instance;
} _HmsgFileOpen_default_instance_;
class HmsgExitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HmsgExit>
      _instance;
} _HmsgExit_default_instance_;
class HmsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hmsg>
      _instance;
  const ::HmsgProcStart* proc_start_;
  const ::HmsgProcEnd* proc_end_;
  const ::HmsgFileOpen* file_open_;
  const ::HmsgExit* exit_;
} _Hmsg_default_instance_;
namespace protobuf_hmsg_2eproto {
static void InitDefaultsHmsgProcStart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HmsgProcStart_default_instance_;
    new (ptr) ::HmsgProcStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HmsgProcStart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HmsgProcStart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHmsgProcStart}, {}};

static void InitDefaultsHmsgProcEnd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HmsgProcEnd_default_instance_;
    new (ptr) ::HmsgProcEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HmsgProcEnd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HmsgProcEnd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHmsgProcEnd}, {}};

static void InitDefaultsHmsgFileOpen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HmsgFileOpen_default_instance_;
    new (ptr) ::HmsgFileOpen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HmsgFileOpen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HmsgFileOpen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHmsgFileOpen}, {}};

static void InitDefaultsHmsgExit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HmsgExit_default_instance_;
    new (ptr) ::HmsgExit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HmsgExit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HmsgExit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHmsgExit}, {}};

static void InitDefaultsHmsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Hmsg_default_instance_;
    new (ptr) ::Hmsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Hmsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Hmsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsHmsg}, {
      &protobuf_hmsg_2eproto::scc_info_HmsgProcStart.base,
      &protobuf_hmsg_2eproto::scc_info_HmsgProcEnd.base,
      &protobuf_hmsg_2eproto::scc_info_HmsgFileOpen.base,
      &protobuf_hmsg_2eproto::scc_info_HmsgExit.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HmsgProcStart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HmsgProcEnd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HmsgFileOpen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HmsgExit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hmsg.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgProcStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgProcStart, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgProcStart, ppid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgProcStart, argv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgProcEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgProcEnd, pid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgFileOpen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgFileOpen, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgFileOpen, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HmsgExit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Hmsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Hmsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HmsgDefaultTypeInternal, proc_start_),
  offsetof(::HmsgDefaultTypeInternal, proc_end_),
  offsetof(::HmsgDefaultTypeInternal, file_open_),
  offsetof(::HmsgDefaultTypeInternal, exit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Hmsg, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::HmsgProcStart)},
  { 8, -1, sizeof(::HmsgProcEnd)},
  { 14, -1, sizeof(::HmsgFileOpen)},
  { 21, -1, sizeof(::HmsgExit)},
  { 26, -1, sizeof(::Hmsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HmsgProcStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HmsgProcEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HmsgFileOpen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HmsgExit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Hmsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "hmsg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nhmsg.proto\032\037google/protobuf/timestamp."
      "proto\"8\n\rHmsgProcStart\022\013\n\003pid\030\001 \001(\003\022\014\n\004p"
      "pid\030\002 \001(\003\022\014\n\004argv\030\003 \003(\t\"\032\n\013HmsgProcEnd\022\013"
      "\n\003pid\030\001 \001(\003\")\n\014HmsgFileOpen\022\013\n\003pid\030\001 \001(\003"
      "\022\014\n\004path\030\002 \001(\t\"\n\n\010HmsgExit\"\224\001\n\004Hmsg\022$\n\np"
      "roc_start\030\002 \001(\0132\016.HmsgProcStartH\000\022 \n\010pro"
      "c_end\030\003 \001(\0132\014.HmsgProcEndH\000\022\"\n\tfile_open"
      "\030\004 \001(\0132\r.HmsgFileOpenH\000\022\031\n\004exit\030\005 \001(\0132\t."
      "HmsgExitH\000B\005\n\003msgb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 345);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hmsg.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_hmsg_2eproto

// ===================================================================

void HmsgProcStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HmsgProcStart::kPidFieldNumber;
const int HmsgProcStart::kPpidFieldNumber;
const int HmsgProcStart::kArgvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HmsgProcStart::HmsgProcStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_hmsg_2eproto::scc_info_HmsgProcStart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HmsgProcStart)
}
HmsgProcStart::HmsgProcStart(const HmsgProcStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      argv_(from.argv_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ppid_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(ppid_));
  // @@protoc_insertion_point(copy_constructor:HmsgProcStart)
}

void HmsgProcStart::SharedCtor() {
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ppid_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(ppid_));
}

HmsgProcStart::~HmsgProcStart() {
  // @@protoc_insertion_point(destructor:HmsgProcStart)
  SharedDtor();
}

void HmsgProcStart::SharedDtor() {
}

void HmsgProcStart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HmsgProcStart::descriptor() {
  ::protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HmsgProcStart& HmsgProcStart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_hmsg_2eproto::scc_info_HmsgProcStart.base);
  return *internal_default_instance();
}


void HmsgProcStart::Clear() {
// @@protoc_insertion_point(message_clear_start:HmsgProcStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  argv_.Clear();
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ppid_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(ppid_));
  _internal_metadata_.Clear();
}

bool HmsgProcStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HmsgProcStart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ppid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ppid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string argv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_argv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->argv(this->argv_size() - 1).data(),
            static_cast<int>(this->argv(this->argv_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HmsgProcStart.argv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HmsgProcStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HmsgProcStart)
  return false;
#undef DO_
}

void HmsgProcStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HmsgProcStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pid = 1;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // int64 ppid = 2;
  if (this->ppid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ppid(), output);
  }

  // repeated string argv = 3;
  for (int i = 0, n = this->argv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argv(i).data(), static_cast<int>(this->argv(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HmsgProcStart.argv");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->argv(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HmsgProcStart)
}

::google::protobuf::uint8* HmsgProcStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HmsgProcStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pid = 1;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // int64 ppid = 2;
  if (this->ppid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ppid(), target);
  }

  // repeated string argv = 3;
  for (int i = 0, n = this->argv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argv(i).data(), static_cast<int>(this->argv(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HmsgProcStart.argv");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->argv(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmsgProcStart)
  return target;
}

size_t HmsgProcStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmsgProcStart)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string argv = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->argv_size());
  for (int i = 0, n = this->argv_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->argv(i));
  }

  // int64 pid = 1;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());
  }

  // int64 ppid = 2;
  if (this->ppid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ppid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HmsgProcStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HmsgProcStart)
  GOOGLE_DCHECK_NE(&from, this);
  const HmsgProcStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HmsgProcStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HmsgProcStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HmsgProcStart)
    MergeFrom(*source);
  }
}

void HmsgProcStart::MergeFrom(const HmsgProcStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HmsgProcStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  argv_.MergeFrom(from.argv_);
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.ppid() != 0) {
    set_ppid(from.ppid());
  }
}

void HmsgProcStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HmsgProcStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HmsgProcStart::CopyFrom(const HmsgProcStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmsgProcStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HmsgProcStart::IsInitialized() const {
  return true;
}

void HmsgProcStart::Swap(HmsgProcStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HmsgProcStart::InternalSwap(HmsgProcStart* other) {
  using std::swap;
  argv_.InternalSwap(CastToBase(&other->argv_));
  swap(pid_, other->pid_);
  swap(ppid_, other->ppid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HmsgProcStart::GetMetadata() const {
  protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HmsgProcEnd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HmsgProcEnd::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HmsgProcEnd::HmsgProcEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_hmsg_2eproto::scc_info_HmsgProcEnd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HmsgProcEnd)
}
HmsgProcEnd::HmsgProcEnd(const HmsgProcEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:HmsgProcEnd)
}

void HmsgProcEnd::SharedCtor() {
  pid_ = GOOGLE_LONGLONG(0);
}

HmsgProcEnd::~HmsgProcEnd() {
  // @@protoc_insertion_point(destructor:HmsgProcEnd)
  SharedDtor();
}

void HmsgProcEnd::SharedDtor() {
}

void HmsgProcEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HmsgProcEnd::descriptor() {
  ::protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HmsgProcEnd& HmsgProcEnd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_hmsg_2eproto::scc_info_HmsgProcEnd.base);
  return *internal_default_instance();
}


void HmsgProcEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:HmsgProcEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool HmsgProcEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HmsgProcEnd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HmsgProcEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HmsgProcEnd)
  return false;
#undef DO_
}

void HmsgProcEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HmsgProcEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pid = 1;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HmsgProcEnd)
}

::google::protobuf::uint8* HmsgProcEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HmsgProcEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pid = 1;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmsgProcEnd)
  return target;
}

size_t HmsgProcEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmsgProcEnd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 pid = 1;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HmsgProcEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HmsgProcEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const HmsgProcEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HmsgProcEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HmsgProcEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HmsgProcEnd)
    MergeFrom(*source);
  }
}

void HmsgProcEnd::MergeFrom(const HmsgProcEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HmsgProcEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pid() != 0) {
    set_pid(from.pid());
  }
}

void HmsgProcEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HmsgProcEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HmsgProcEnd::CopyFrom(const HmsgProcEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmsgProcEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HmsgProcEnd::IsInitialized() const {
  return true;
}

void HmsgProcEnd::Swap(HmsgProcEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HmsgProcEnd::InternalSwap(HmsgProcEnd* other) {
  using std::swap;
  swap(pid_, other->pid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HmsgProcEnd::GetMetadata() const {
  protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HmsgFileOpen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HmsgFileOpen::kPidFieldNumber;
const int HmsgFileOpen::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HmsgFileOpen::HmsgFileOpen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_hmsg_2eproto::scc_info_HmsgFileOpen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HmsgFileOpen)
}
HmsgFileOpen::HmsgFileOpen(const HmsgFileOpen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:HmsgFileOpen)
}

void HmsgFileOpen::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = GOOGLE_LONGLONG(0);
}

HmsgFileOpen::~HmsgFileOpen() {
  // @@protoc_insertion_point(destructor:HmsgFileOpen)
  SharedDtor();
}

void HmsgFileOpen::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HmsgFileOpen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HmsgFileOpen::descriptor() {
  ::protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HmsgFileOpen& HmsgFileOpen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_hmsg_2eproto::scc_info_HmsgFileOpen.base);
  return *internal_default_instance();
}


void HmsgFileOpen::Clear() {
// @@protoc_insertion_point(message_clear_start:HmsgFileOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool HmsgFileOpen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HmsgFileOpen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HmsgFileOpen.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HmsgFileOpen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HmsgFileOpen)
  return false;
#undef DO_
}

void HmsgFileOpen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HmsgFileOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pid = 1;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HmsgFileOpen.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HmsgFileOpen)
}

::google::protobuf::uint8* HmsgFileOpen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HmsgFileOpen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pid = 1;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HmsgFileOpen.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmsgFileOpen)
  return target;
}

size_t HmsgFileOpen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmsgFileOpen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int64 pid = 1;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HmsgFileOpen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HmsgFileOpen)
  GOOGLE_DCHECK_NE(&from, this);
  const HmsgFileOpen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HmsgFileOpen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HmsgFileOpen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HmsgFileOpen)
    MergeFrom(*source);
  }
}

void HmsgFileOpen::MergeFrom(const HmsgFileOpen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HmsgFileOpen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
}

void HmsgFileOpen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HmsgFileOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HmsgFileOpen::CopyFrom(const HmsgFileOpen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmsgFileOpen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HmsgFileOpen::IsInitialized() const {
  return true;
}

void HmsgFileOpen::Swap(HmsgFileOpen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HmsgFileOpen::InternalSwap(HmsgFileOpen* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HmsgFileOpen::GetMetadata() const {
  protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HmsgExit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HmsgExit::HmsgExit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_hmsg_2eproto::scc_info_HmsgExit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HmsgExit)
}
HmsgExit::HmsgExit(const HmsgExit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmsgExit)
}

void HmsgExit::SharedCtor() {
}

HmsgExit::~HmsgExit() {
  // @@protoc_insertion_point(destructor:HmsgExit)
  SharedDtor();
}

void HmsgExit::SharedDtor() {
}

void HmsgExit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HmsgExit::descriptor() {
  ::protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HmsgExit& HmsgExit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_hmsg_2eproto::scc_info_HmsgExit.base);
  return *internal_default_instance();
}


void HmsgExit::Clear() {
// @@protoc_insertion_point(message_clear_start:HmsgExit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HmsgExit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HmsgExit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HmsgExit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HmsgExit)
  return false;
#undef DO_
}

void HmsgExit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HmsgExit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HmsgExit)
}

::google::protobuf::uint8* HmsgExit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HmsgExit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmsgExit)
  return target;
}

size_t HmsgExit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmsgExit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HmsgExit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HmsgExit)
  GOOGLE_DCHECK_NE(&from, this);
  const HmsgExit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HmsgExit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HmsgExit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HmsgExit)
    MergeFrom(*source);
  }
}

void HmsgExit::MergeFrom(const HmsgExit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HmsgExit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HmsgExit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HmsgExit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HmsgExit::CopyFrom(const HmsgExit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmsgExit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HmsgExit::IsInitialized() const {
  return true;
}

void HmsgExit::Swap(HmsgExit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HmsgExit::InternalSwap(HmsgExit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HmsgExit::GetMetadata() const {
  protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hmsg::InitAsDefaultInstance() {
  ::_Hmsg_default_instance_.proc_start_ = const_cast< ::HmsgProcStart*>(
      ::HmsgProcStart::internal_default_instance());
  ::_Hmsg_default_instance_.proc_end_ = const_cast< ::HmsgProcEnd*>(
      ::HmsgProcEnd::internal_default_instance());
  ::_Hmsg_default_instance_.file_open_ = const_cast< ::HmsgFileOpen*>(
      ::HmsgFileOpen::internal_default_instance());
  ::_Hmsg_default_instance_.exit_ = const_cast< ::HmsgExit*>(
      ::HmsgExit::internal_default_instance());
}
void Hmsg::set_allocated_proc_start(::HmsgProcStart* proc_start) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (proc_start) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      proc_start = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, proc_start, submessage_arena);
    }
    set_has_proc_start();
    msg_.proc_start_ = proc_start;
  }
  // @@protoc_insertion_point(field_set_allocated:Hmsg.proc_start)
}
void Hmsg::set_allocated_proc_end(::HmsgProcEnd* proc_end) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (proc_end) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      proc_end = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, proc_end, submessage_arena);
    }
    set_has_proc_end();
    msg_.proc_end_ = proc_end;
  }
  // @@protoc_insertion_point(field_set_allocated:Hmsg.proc_end)
}
void Hmsg::set_allocated_file_open(::HmsgFileOpen* file_open) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (file_open) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      file_open = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file_open, submessage_arena);
    }
    set_has_file_open();
    msg_.file_open_ = file_open;
  }
  // @@protoc_insertion_point(field_set_allocated:Hmsg.file_open)
}
void Hmsg::set_allocated_exit(::HmsgExit* exit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (exit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exit, submessage_arena);
    }
    set_has_exit();
    msg_.exit_ = exit;
  }
  // @@protoc_insertion_point(field_set_allocated:Hmsg.exit)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hmsg::kProcStartFieldNumber;
const int Hmsg::kProcEndFieldNumber;
const int Hmsg::kFileOpenFieldNumber;
const int Hmsg::kExitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hmsg::Hmsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_hmsg_2eproto::scc_info_Hmsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Hmsg)
}
Hmsg::Hmsg(const Hmsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kProcStart: {
      mutable_proc_start()->::HmsgProcStart::MergeFrom(from.proc_start());
      break;
    }
    case kProcEnd: {
      mutable_proc_end()->::HmsgProcEnd::MergeFrom(from.proc_end());
      break;
    }
    case kFileOpen: {
      mutable_file_open()->::HmsgFileOpen::MergeFrom(from.file_open());
      break;
    }
    case kExit: {
      mutable_exit()->::HmsgExit::MergeFrom(from.exit());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Hmsg)
}

void Hmsg::SharedCtor() {
  clear_has_msg();
}

Hmsg::~Hmsg() {
  // @@protoc_insertion_point(destructor:Hmsg)
  SharedDtor();
}

void Hmsg::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void Hmsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hmsg::descriptor() {
  ::protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hmsg& Hmsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_hmsg_2eproto::scc_info_Hmsg.base);
  return *internal_default_instance();
}


void Hmsg::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:Hmsg)
  switch (msg_case()) {
    case kProcStart: {
      delete msg_.proc_start_;
      break;
    }
    case kProcEnd: {
      delete msg_.proc_end_;
      break;
    }
    case kFileOpen: {
      delete msg_.file_open_;
      break;
    }
    case kExit: {
      delete msg_.exit_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void Hmsg::Clear() {
// @@protoc_insertion_point(message_clear_start:Hmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool Hmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Hmsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HmsgProcStart proc_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_proc_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HmsgProcEnd proc_end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_proc_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HmsgFileOpen file_open = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_open()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HmsgExit exit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Hmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Hmsg)
  return false;
#undef DO_
}

void Hmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Hmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HmsgProcStart proc_start = 2;
  if (has_proc_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_proc_start(), output);
  }

  // .HmsgProcEnd proc_end = 3;
  if (has_proc_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_proc_end(), output);
  }

  // .HmsgFileOpen file_open = 4;
  if (has_file_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_file_open(), output);
  }

  // .HmsgExit exit = 5;
  if (has_exit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_exit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Hmsg)
}

::google::protobuf::uint8* Hmsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Hmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HmsgProcStart proc_start = 2;
  if (has_proc_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_proc_start(), deterministic, target);
  }

  // .HmsgProcEnd proc_end = 3;
  if (has_proc_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_proc_end(), deterministic, target);
  }

  // .HmsgFileOpen file_open = 4;
  if (has_file_open()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_file_open(), deterministic, target);
  }

  // .HmsgExit exit = 5;
  if (has_exit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_exit(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Hmsg)
  return target;
}

size_t Hmsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Hmsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_case()) {
    // .HmsgProcStart proc_start = 2;
    case kProcStart: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.proc_start_);
      break;
    }
    // .HmsgProcEnd proc_end = 3;
    case kProcEnd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.proc_end_);
      break;
    }
    // .HmsgFileOpen file_open = 4;
    case kFileOpen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.file_open_);
      break;
    }
    // .HmsgExit exit = 5;
    case kExit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.exit_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hmsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Hmsg)
  GOOGLE_DCHECK_NE(&from, this);
  const Hmsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hmsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Hmsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Hmsg)
    MergeFrom(*source);
  }
}

void Hmsg::MergeFrom(const Hmsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Hmsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kProcStart: {
      mutable_proc_start()->::HmsgProcStart::MergeFrom(from.proc_start());
      break;
    }
    case kProcEnd: {
      mutable_proc_end()->::HmsgProcEnd::MergeFrom(from.proc_end());
      break;
    }
    case kFileOpen: {
      mutable_file_open()->::HmsgFileOpen::MergeFrom(from.file_open());
      break;
    }
    case kExit: {
      mutable_exit()->::HmsgExit::MergeFrom(from.exit());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void Hmsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Hmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hmsg::CopyFrom(const Hmsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Hmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hmsg::IsInitialized() const {
  return true;
}

void Hmsg::Swap(Hmsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hmsg::InternalSwap(Hmsg* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hmsg::GetMetadata() const {
  protobuf_hmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HmsgProcStart* Arena::CreateMaybeMessage< ::HmsgProcStart >(Arena* arena) {
  return Arena::CreateInternal< ::HmsgProcStart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HmsgProcEnd* Arena::CreateMaybeMessage< ::HmsgProcEnd >(Arena* arena) {
  return Arena::CreateInternal< ::HmsgProcEnd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HmsgFileOpen* Arena::CreateMaybeMessage< ::HmsgFileOpen >(Arena* arena) {
  return Arena::CreateInternal< ::HmsgFileOpen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HmsgExit* Arena::CreateMaybeMessage< ::HmsgExit >(Arena* arena) {
  return Arena::CreateInternal< ::HmsgExit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Hmsg* Arena::CreateMaybeMessage< ::Hmsg >(Arena* arena) {
  return Arena::CreateInternal< ::Hmsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
